package StackAndQueuesLab;

import java.util.Arrays;
import java.util.PriorityQueue;
import java.util.Scanner;

public class Math_Potato_07 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        PriorityQueue<String> childQueue = new PriorityQueue<>();
        Arrays.stream(scanner.nextLine().split("\\s+"))
                .forEach(childQueue::offer);

        int n = Integer.parseInt(scanner.nextLine());
        int rotations = 0;

        while (childQueue.size() > 1){

            String lastChild = childQueue.poll();
            rotations++;

            if (isPrime(rotations)){
                System.out.printf("Prime %s%n", lastChild);
                childQueue.offer(lastChild);
            } else {
                System.out.printf("Removed %s%n", lastChild);
            }


        }

        String lastChild = childQueue.peek();
        System.out.printf("Last is %s", lastChild);

    }

    public static boolean isPrime(int rotations){

        if (rotations == 1){
            return false;
        }

        for (int i = 2; i < rotations; i++){
            if (rotations % i == 0){
                return false;
            }
        }

        return true;
    }
}
