package MultidimentionalArraysExercise;

import java.util.Arrays;
import java.util.Scanner;

public class MatrixShuffling_05 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int[] input = Arrays.stream(scanner.nextLine().split("\\s+")).mapToInt(Integer::valueOf).toArray();
        int rows = input[0];
        int cols = input[1];

        String[][] matrix = new String[rows][cols];
        fillMatrix(matrix, scanner);

        String command = scanner.nextLine();

        while (!command.equals("END")) {
            String[] tokens = command.split("\\s+");

            if (commandIsValid(tokens, matrix)) {
                initializeSwap(matrix, tokens);
                printMatrix(matrix);
            } else {
                System.out.println("Invalid input!");
            }

            command = scanner.nextLine();
        }

    }
    
    public static void printMatrix(String[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            String[] row = matrix[i];
            System.out.println(String.join(" ", row));
        }
    }
    
    public static void initializeSwap(String[][] matrix, String[] tokens) {
        int row1 = Integer.parseInt(tokens[1]);
        int col1 = Integer.parseInt(tokens[2]);
        int row2 = Integer.parseInt(tokens[3]);
        int col2 = Integer.parseInt(tokens[4]);
        
        String oldValue = matrix[row1][col1];
        matrix[row1][col1] = matrix[row2][col2];
        matrix[row2][col2] = oldValue;
    }

    public static boolean commandIsValid(String[] tokens, String[][] matrix) {

        String command = tokens[0];

        if (tokens.length != 5 || !tokens[0].equals("swap")){
            return false;
        }

        int row1 = Integer.parseInt(tokens[1]);
        int col1 = Integer.parseInt(tokens[2]);
        int row2 = Integer.parseInt(tokens[3]);
        int col2 = Integer.parseInt(tokens[4]);

        if (row1 < 0 || col1 < 0 || row2 < 0 || col2 < 0){
            return false;
        }

        if (row1 >= matrix.length || col1 >= matrix[row1].length || row2 >= matrix.length || col2 >= matrix[row2].length){
            return false;
        }

        return true;
    }

    public static void fillMatrix(String[][] matrix, Scanner scanner) {
        for (int i = 0; i < matrix.length; i++) {
            String[] arr = fillArray(scanner);

            matrix[i] = arr;
        }
    }

    public static String[] fillArray(Scanner scanner) {
        return scanner.nextLine().split("\\s+");
    }

}
